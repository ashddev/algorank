{
    "name": "Election",
    "structs": {},
    "methods": [
        {
            "name": "cast_ballot",
            "args": [
                {
                    "type": "byte[]",
                    "name": "ipfs_hash"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_verifier",
            "args": [],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_ballot",
            "args": [
                {
                    "type": "address",
                    "name": "for_account"
                },
                {
                    "type": "uint64",
                    "name": "new_commitment_sum"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 2,
                "bytes": 1
            },
            "local": {
                "ints": 1,
                "bytes": 1
            }
        },
        "keys": {
            "global": {
                "commitment_sum": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "Y29tbWl0bWVudF9zdW0="
                },
                "verifier_pk": {
                    "keyType": "AVMString",
                    "valueType": "address",
                    "key": "dmVyaWZpZXJfcGs="
                },
                "verifier_set": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "dmVyaWZpZXJfc2V0"
                }
            },
            "local": {
                "ballot_ipfs": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "YmFsbG90X2lwZnM="
                },
                "verified": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "dmVyaWZpZWQ="
                }
            },
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": [
            "OptIn"
        ]
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        80
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        128
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        124
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        289
                    ],
                    "errorMessage": "check self.verifier_pk exists"
                },
                {
                    "pc": [
                        142
                    ],
                    "errorMessage": "invalid number of bytes for (len+uint8[])"
                },
                {
                    "pc": [
                        281
                    ],
                    "errorMessage": "invalid number of bytes for uint64"
                },
                {
                    "pc": [
                        272
                    ],
                    "errorMessage": "invalid number of bytes for uint8[32]"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CyACAAEmBQh2ZXJpZmllZA5jb21taXRtZW50X3N1bQx2ZXJpZmllcl9zZXQEFR98dQt2ZXJpZmllcl9wazEYQAAGKSJnKiJnMRtBACQxGRREMRhEggMEn6qAzAQGDmZjBOQjQdM2GgCOAwARAHcAlgAxGY0CAAQAAQAxGEMxGBRDNhoBSSJZgQIISwEVEkRXAgAxAEkiKGNFAUEAJIAUQmFsbG90IGFscmVhZHkgc2VudCFJFRZXBgJMUCtMULAjQ0cCgAtiYWxsb3RfaXBmc0sEZigiZoAMQmFsbG90IGNhc3QhQv/MJwQxAGcqI2eAEhUffHUADFZlcmlmaWVyIHNldLAjQ4AANhoBSRWBIBJENhoCSRWBCBJEFzEAIicEZUQTQQAcgAxVbmF1dGhvcml6ZWRJFRZXBgJMUCtMULAjQ0sBIihjTEUEQAAjgB5BY2NvdW50IGhhcyBub3QgY2FzdCBhIGJhbGxvdCFC/8RLAiMSQQAlgCBUaGlzIGJhbGxvdCBpcyBhbHJlYWR5IHZlcmlmaWVkIUL/mClLAWdLASgjZoAQVmVyaWZpZWQgYmFsbG90IUL/eg==",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 2,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}